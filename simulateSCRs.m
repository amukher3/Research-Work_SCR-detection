% function [sc,scrTimes,alpha,tau1,tau2,mu] = simulateSCRs(duration,freq, ...
%     scrRate,hyperparam)
% % Generative model for skin conductance:
% % SCR times generated by homogeneous Poisson process with rate scrRate
% % SCR amplitude: alpha ~ Gamma(hyperparam(1),hyperparam(2))
% % Bateman decay parameter: tau1 ~ Gamma(hyperparam(3),hyperparam(4))
% % Bateman rise parameter: tau2 ~ Gamma(hyperparam(5),hyperparam(6))
% % Time shift of SCR: delta ~ Uniform(0,samplePeriod)
% % SCR: scr(t) ~ N(Bateman(t),hyperparam(7))
% 
% % Total number of skin conductance samples for given duration
% totalSamples = duration*freq;
% 
% % Simulate SCR times in continuous time
% interEventTimes = [];
% 
% % Simulate enough SCRs (events) so that with probability > 0.99, there will
% % be enough SCRs to cover the selected duration. If there are not
% % enough SCRs, we will simulate more SCRs to add onto the
% % previously simulated SCRs until we have enough
% nEventsToSim = ceil(5*duration/scrRate);
% 
% while sum(interEventTimes) < duration
%     interEventTimes = [interEventTimes exprnd(1/scrRate,1, ...
%         nEventsToSim)]; %#ok<AGROW>
% end
% scrTimes = cumsum(interEventTimes);
% 
% % Truncate all events that occur beyond the specified duration
% cutoff = find(scrTimes > duration,1);
% scrTimes = scrTimes(1:cutoff-1);
% nEvents = length(scrTimes);
% 
% % Simulate each SCR by first sampling SCR parameter values
% alpha = gamrnd(hyperparam(1),hyperparam(2),nEvents,1);
% tau1 = gamrnd(hyperparam(3),hyperparam(4),nEvents,1);
% tau2 = gamrnd(hyperparam(5),hyperparam(6),nEvents,1);
% 
% % Sample each SCR by sampling a scaled and shifted Bateman function
% mu = zeros(nEvents,totalSamples);
% 
% for i = 1:nEvents
%     t = 1/freq:1/freq:duration;
%     mu(i,:) = bateman(t,alpha(i),scrTimes(i),tau1(i),tau2(i));
% end
% 
% % Generate observed skin conductance by summing all SCRs and adding
% % Gaussian noise
% sc = sum(mu,1) + sqrt(hyperparam(7))*randn(1,totalSamples);
% 
% end
% 
function [sc,scrTimes,alpha,tau1,tau2,mu] = simulateSCRs(duration,freq, ...
    scrRate,hyper)
% Generative model for skin conductance:
% SCR times generated by homogeneous Poisson process with rate scrRate
% SCR amplitude: alpha ~ Gamma(hyperparam(1),hyperparam(2))
% Bateman decay parameter: tau1 ~ Gamma(hyperparam(3),hyperparam(4))
% Bateman rise parameter: tau2 ~ Gamma(hyperparam(5),hyperparam(6))
% Time shift of SCR: delta ~ Uniform(0,samplePeriod)
% SCR: scr(t) ~ N(Bateman(t),hyperparam(7))

% Total number of skin conductance samples for given duration
totalSamples = duration*freq;

% Simulate SCR times in continuous time
interEventLengths = [29,34,39];
nEventsToSim = ceil(duration/min(interEventLengths));
interEventTimeIndices = randi(length(interEventLengths),1,nEventsToSim);
interEventTimes = interEventLengths(interEventTimeIndices);
% interEventTimes = [];
% % Simulate enough SCRs (events) so that with probability > 0.99, there will
% % be enough SCRs to cover the selected duration. If there are not
% % enough SCRs, we will simulate more SCRs to add onto the
% % previously simulated SCRs until we have enough
% nEventsToSim = ceil(5*duration/scrRate);
% while sum(interEventTimes) < duration
%     interEventTimes = [interEventTimes exprnd(1/scrRate,1, ...
%         nEventsToSim)+10]; %#ok<AGROW>
% end
scrTimes = cumsum(interEventTimes);

% Truncate all events that occur beyond the specified duration
% cutoff = find(scrTimes > duration,1);
cutoff = find(scrTimes > duration - max(interEventLengths),1);
scrTimes = scrTimes(1:cutoff-1);
nEvents = length(scrTimes);

% Simulate each SCR by first sampling SCR parameter values
alpha = gamrnd(hyper.alphaShape,hyper.alphaScale,nEvents,1);
% Generate 2x as many pairs of (tau1, tau2) as necessary then take the
% first nEvents where tau1 > tau2 (valid pairs)
tau1 = gamrnd(hyper.tau1Shape,hyper.tau1Scale,2*nEvents,1);
tau2 = gamrnd(hyper.tau2Shape,hyper.tau2Scale,2*nEvents,1);
validPairs = find(tau1 > tau2,nEvents);
tau1 = tau1(validPairs);
tau2 = tau2(validPairs);

% Sample each SCR by sampling a scaled and shifted Bateman function
mu = zeros(nEvents,totalSamples);
for i = 1:nEvents
    t = 1/freq:1/freq:duration;
    mu(i,:) = bateman(t,alpha(i),scrTimes(i),tau1(i),tau2(i));
end

% Generate observed skin conductance by summing all SCRs and adding
% Gaussian noise
sc = sum(mu,1) + sqrt(hyper.noiseVar)*randn(1,totalSamples);

end

